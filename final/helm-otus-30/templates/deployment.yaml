{{- range .Values.deployment }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ .name }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/name: {{ .name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/name: {{ .name }}
    spec:
      initContainers:
      - name: init-cont
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{ $.Release.Name }}-mariadb 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
      - name: {{ .name }}
        env:
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              key: db_url
              name: db-secret
        - name: KAFKA_URL
          valueFrom:
            secretKeyRef:
              key: kafka_url
              name: db-secret
        image: {{ .image }}
        imagePullPolicy: IfNotPresent
        # args: ["fastapi", "dev", "main.py", "--host", "0.0.0.0"]
        # livenessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /health
        #     port: 8000
        #     scheme: HTTP
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources: {}
        securityContext: {}
      #   volumeMounts:
      #     - name: dev
      #       mountPath: /app
      # volumes:
      #   - name: dev
      #     hostPath:
      #       path: /learning/30/{{ .name }}
{{- end }}