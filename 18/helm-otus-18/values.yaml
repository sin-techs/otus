# Default values for helm-otus-15.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

mariadb:
  auth:
    rootPassword: password
  primary:
    persistence:
      enabled: false

prometheus:
  alertmanager:
    enabled: false
  server:
    prefixURL: /prometheus
    baseURL: /prometheus
    ingress:
      enabled: true
      ingressClassName: nginx
      path: /prometheus
      hosts: 
        - arch.homework
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s
  extraScrapeConfigs: |
    - job_name: fastapi
      metrics_path: /metrics
      static_configs:
      - targets:
        - otus-18-crud-app:8000
  prometheus-pushgateway:
    enabled: false
  prometheus-node-exporter:
    enabled: false


grafana:
  env:
    GF_SECURITY_ADMIN_USER: admin
    GF_SECURITY_ADMIN_PASSWORD: grafana
    GF_USERS_DEFAULT_THEME: light
  grafana.ini:
    server:
      domain: arch.homework
      root_url: https://arch.homework/grafana
      serve_from_sub_path: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://otus-18-prometheus-server/prometheus
  ingress:
    enabled: true
    ingressClassName: nginx
    path: /grafana
    hosts: 
      - arch.homework

db:
  user: root
  pass: password
  dbname: app
# host: {{ .Release.Name }}-mariadb
  

replicaCount: 1

image:
  repository: homework
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "18-metrics"

imagePullSecrets: []
nameOverride: "crud-app"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: arch.homework
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8000
readinessProbe:
  httpGet:
    path: /users
    port: 8000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

env:
  - name: DB_URL
    valueFrom:
      secretKeyRef:
        name: crud-secret
        key: db_url


# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
