{
	"info": {
		"_postman_id": "cbb19817-d64a-4d30-8e07-704fd2f2a724",
		"name": "otus-26",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36768135"
	},
	"item": [
		{
			"name": "create user 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"user_id1\", jsonData.id);\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"login\": \"user{{$randomInt}}\",\r\n  \"password\": \"pass{{$randomInt}}\",\r\n  \"firstname\": \"Name1\",\r\n  \"lastname\": \"Family1\",\r\n  \"email\": \"name@family.com\",\r\n  \"age\": 11\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put money to account (+100)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"token\", jsonData['token']);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"order_id\": 0,\r\n  \"user_id\": {{user_id1}},\r\n  \"type\": 2,\r\n  \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/billing/transaction",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"billing",
						"transaction"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make valid order (-10)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_id\": {{user_id1}},\r\n  \"name\": \"Order 1\",\r\n  \"amount\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/order/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check account balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Balance = \"+pm.response.json().amount, function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.amount).to.eql(100-10);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/billing/account?user_id={{user_id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"billing",
						"account"
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check notifications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"message sent: \"+jsonData[jsonData.length-1].message, function () {\r",
							"    pm.expect(jsonData.length).to.eq(1)\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}//api/notification/notification/{{user_id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"api",
						"notification",
						"notification",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make invalid order (-100)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_id\": {{user_id1}},\r\n  \"name\": \"Order 2\",\r\n  \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/order/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check account balance 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Balance = \"+pm.response.json().amount, function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.amount).to.eql(100-10);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/billing/account?user_id={{user_id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"billing",
						"account"
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check notifications 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"message sent: \"+jsonData[jsonData.length-1].message, function () {\r",
							"    pm.expect(jsonData.length).to.eq(2)\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}//api/notification/notification/{{user_id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"api",
						"notification",
						"notification",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "string"
		},
		{
			"key": "user_id1",
			"value": "",
			"type": "default"
		},
		{
			"key": "user_id2",
			"value": "",
			"type": "string"
		}
	]
}